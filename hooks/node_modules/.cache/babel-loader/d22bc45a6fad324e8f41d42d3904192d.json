{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalWork\\\\React\\\\React Examples\\\\ReactExampleForSkill2Fill\\\\hooks\\\\src\\\\components\\\\UseReducerHookExample2.js\";\nimport React, { useReducer } from 'react';\nconst initialState = {\n  initalNumber: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return state.initalNumber + 1;\n\n    case 'decrement':\n      return state.initalNumber - 1;\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction UseReducerHookExample2() {\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Count :\", count.initalNumber, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'reset'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \" Reset\"));\n}\n\nexport default UseReducerHookExample2;","map":{"version":3,"sources":["D:/PersonalWork/React/React Examples/ReactExampleForSkill2Fill/hooks/src/components/UseReducerHookExample2.js"],"names":["React","useReducer","initialState","initalNumber","reducer","state","action","type","UseReducerHookExample2","count","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB,aAAOF,KAAK,CAACF,YAAN,GAAqB,CAA5B;;AAClB,SAAK,WAAL;AAAkB,aAAOE,KAAK,CAACF,YAAN,GAAqB,CAA5B;;AAClB,SAAK,OAAL;AAAc,aAAOD,YAAP;;AACd;AAAS,aAAOG,KAAP;AAJb;AAMH,CAPD;;AAQA,SAASG,sBAAT,GAAkC;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACG,OAAD,EAAUF,YAAV,CAApC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYO,KAAK,CAACN,YADlB,oBACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ;AAQH;;AAED,eAAeC,sBAAf","sourcesContent":["import React, { useReducer } from 'react'\r\n\r\nconst initialState = {\r\n    initalNumber: 0\r\n}\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'increment': return state.initalNumber + 1\r\n        case 'decrement': return state.initalNumber - 1\r\n        case 'reset': return initialState\r\n        default: return state;\r\n    }\r\n}\r\nfunction UseReducerHookExample2() {\r\n\r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n\r\n    return (\r\n        <div>\r\n            Count :{count.initalNumber} <br />\r\n            <button onClick={() => dispatch({ type: 'increment' })}>Increment</button>\r\n            <button onClick={() => dispatch({ type: 'decrement' })}>Decrement</button>\r\n            <button onClick={() => dispatch({ type: 'reset' })}> Reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseReducerHookExample2"]},"metadata":{},"sourceType":"module"}