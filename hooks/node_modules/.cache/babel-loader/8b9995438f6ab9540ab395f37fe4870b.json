{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalWork\\\\React\\\\React Examples\\\\ReactExampleForSkill2Fill\\\\hooks\\\\src\\\\components\\\\ContextAndReduce.js\";\nimport React, { useReducer } from 'react';\nimport ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport ComponentC2 from './ComponentC2';\nexport const CountContext = React.createContext();\nconst initialValue = 0;\n\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'increment':\n      return state + 1;\n\n    case 'decrement':\n      return state - 1;\n\n    case 'reset':\n      return initialValue;\n\n    default:\n      return state;\n  }\n};\n\nfunction contextAndReduce() {\n  const [count, dispatch] = useReducer(reducer, initialValue);\n  return /*#__PURE__*/React.createElement(CountContext.Provider, {\n    value: {\n      countState: count,\n      countDispatch: dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Count : \", count, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(ComponentA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ComponentB, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ComponentC2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default contextAndReduce;","map":{"version":3,"sources":["D:/PersonalWork/React/React Examples/ReactExampleForSkill2Fill/hooks/src/components/ContextAndReduce.js"],"names":["React","useReducer","ComponentA","ComponentB","ComponentC2","CountContext","createContext","initialValue","reducer","state","action","contextAndReduce","count","dispatch","countState","countDispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,YAAY,GAAGL,KAAK,CAACM,aAAN,EAArB;AAEP,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAR;AACI,SAAK,WAAL;AAAkB,aAAOD,KAAK,GAAG,CAAf;;AAClB,SAAK,WAAL;AAAkB,aAAOA,KAAK,GAAG,CAAf;;AAClB,SAAK,OAAL;AAAc,aAAOF,YAAP;;AACd;AAAS,aAAOE,KAAP;AAJb;AAMH,CAPD;;AASA,SAASE,gBAAT,GAA4B;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACO,OAAD,EAAUD,YAAV,CAApC;AACA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAEF,KAAd;AAAqBG,MAAAA,aAAa,EAAEF;AAApC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACaD,KADb,oBACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAUH;;AAED,eAAeD,gBAAf","sourcesContent":["import React, { useReducer } from 'react'\r\nimport ComponentA from './ComponentA'\r\nimport ComponentB from './ComponentB';\r\nimport ComponentC2 from './ComponentC2'\r\n\r\nexport const CountContext = React.createContext()\r\n\r\nconst initialValue = 0;\r\nconst reducer = (state, action) => {\r\n    switch (action) {\r\n        case 'increment': return state + 1\r\n        case 'decrement': return state - 1\r\n        case 'reset': return initialValue\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction contextAndReduce() {\r\n    const [count, dispatch] = useReducer(reducer, initialValue);\r\n    return (\r\n        <CountContext.Provider value={{ countState: count, countDispatch: dispatch }}>\r\n            <div>\r\n                Count : {count} <br />\r\n                <ComponentA />\r\n                <ComponentB />\r\n                <ComponentC2 />\r\n            </div>\r\n        </CountContext.Provider>\r\n    )\r\n}\r\n\r\nexport default contextAndReduce"]},"metadata":{},"sourceType":"module"}